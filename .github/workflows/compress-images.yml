name: 🗜️ Safe Auto Image Processing

on:
  push:
    branches:
      - main
    paths:
      - 'static/img/uploads/**/*.jpg'
      - 'static/img/uploads/**/*.jpeg'
      - 'static/img/uploads/**/*.png'
  workflow_dispatch: 

jobs:
  compress:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📂 Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: 📋 Get changed original images only
      id: changed-files
      uses: tj-actions/changed-files@v35
      with:
        files: |
          static/img/uploads/**/*.jpg
          static/img/uploads/**/*.jpeg
          static/img/uploads/**/*.png
        files_ignore: |
          static/img/uploads/**/*.webp
    
    - name: 🛠️ Install WebP support
      if: steps.changed-files.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch'
      run: |
        sudo apt-get update
        sudo apt-get install -y webp
    
    - name: 🧹 Clean up old thumbnail and medium files
      if: steps.changed-files.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch'
      run: |
        echo "🧹 Cleaning up old thumbnail and medium files..."
        find static/img/uploads -name "*_thumb.*" -type f -delete 2>/dev/null || true
        find static/img/uploads -name "*_medium.*" -type f -delete 2>/dev/null || true
        find static/img/uploads -name "*-thumb.*" -type f -delete 2>/dev/null || true
        find static/img/uploads -name "*-medium.*" -type f -delete 2>/dev/null || true
        echo "✅ Cleanup completed"
    
    - name: 🌐 Process original images to WebP
      if: steps.changed-files.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch'
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "🔄 Processing ALL original images (manual run)..."
          # grep 대신 find의 -not 옵션 사용
          find static/img/uploads -type f \( -name "*.jpg" -o -name "*.jpeg" -o -name "*.png" \) \
            -not -name "*_thumb*" -not -name "*_medium*" -not -name "*-thumb*" -not -name "*-medium*" | while read img; do
            if [ -f "$img" ]; then
              filename=$(basename "$img")
              dirname=$(dirname "$img")
              name="${filename%.*}"
              
              # 한글 파일명을 URL-safe하게 변환 (워크플로우와 동일한 로직)
              safe_name=$(echo "$name" | sed 's/[^a-zA-Z0-9.-]/-/g' | sed 's/--*/-/g' | sed 's/^-\|-$//g')
              
              echo "🆕 Processing: $img"
              echo "   Original name: $name"
              echo "   Safe name: $safe_name"
              
              if [ ! -f "${dirname}/${safe_name}.webp" ] || [ "$img" -nt "${dirname}/${safe_name}.webp" ]; then
                cwebp -q 85 "$img" -o "${dirname}/${safe_name}.webp"
                echo "✅ WebP: ${safe_name}.webp"
              fi
            fi
          done
        else
          echo "🔄 Processing only NEW/CHANGED original images..."
          echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | while read img; do
            if [ -f "$img" ] && [ -n "$img" ]; then
              filename=$(basename "$img")
              dirname=$(dirname "$img")
              name="${filename%.*}"
              
              # 한글 파일명을 URL-safe하게 변환 (워크플로우와 동일한 로직)
              safe_name=$(echo "$name" | sed 's/[^a-zA-Z0-9.-]/-/g' | sed 's/--*/-/g' | sed 's/^-\|-$//g')
              
              echo "🆕 Processing: $img"
              echo "   Original name: $name"
              echo "   Safe name: $safe_name"
              
              if [ ! -f "${dirname}/${safe_name}.webp" ] || [ "$img" -nt "${dirname}/${safe_name}.webp" ]; then
                cwebp -q 85 "$img" -o "${dirname}/${safe_name}.webp"
                echo "✅ WebP: ${safe_name}.webp"
              fi
            fi
          done
        fi
        
    - name: 📤 Commit changes
      if: steps.changed-files.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch'
      run: |
        git config --local user.email "nfp-compress-bot@github.com"
        git config --local user.name "NFP Compress Bot"
        git add static/img/uploads/
        if git diff --cached --quiet; then
          echo "📸 No changes to commit"
        else
          git commit -m "🗜️ Auto process new/changed images [skip ci]"
          git push
          echo "✅ Changes committed"
        fi